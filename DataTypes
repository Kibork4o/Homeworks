1.    Declare Variables

ushort Ushort = 52103;
sbyte Sbyte = 115;
int Int = 4825932;
sbyte secSbyte = 97;
short Short = -10000;
Console.WriteLine("ushort: {0}, sbyte: {1}, int: {2}, sbyte: {3}, short: {4}", Ushort, Sbyte, Int, secSbyte, Short);

2.    Float or Double?

double Double = 34.567839023;
float Float = 12.345f;
double secDouble = 8923.1234567;
float secFloat = 3456.091f;
Console.WriteLine("Double: {0}, Float: {1}, Double: {2}, Float: {3}", Double, Float, secDouble, secFloat);

3.    Comparing Floats

//Bool променливата, определяща, True или False да изведем
        //Числата, които ще ползваме
        var first = decimal.Parse(Console.ReadLine());
        var second = decimal.Parse(Console.ReadLine());

        if (((second - first) == 0.000001m) || (first - second) == 0.000001m)
        {
            Console.WriteLine("Border case. The difference 0.000001 == eps. We consider the numbers are different.");
        }
        else if ((first * -1) == (second) || (first == (second * -1)) || (float)first == (float)second)
        {
            Console.WriteLine("The result is:  {0} The difference {1} < eps", true, (first - second) * -1);
        }
        else
        {
            Console.WriteLine("The result is:  {0} The difference of {1} is too big (> eps)", false, second - first);
        }

4.    Variable in Hexadecimal Format

int hex = 0x254;
//hex=596
Console.WriteLine(hex);

5.    Unicode Value

char Unicode = 'H';
int Num;
Console.WriteLine("Char: " + Unicode);
Console.WriteLine("Code: " + (int)Unicode);
Num=(int)Unicode;
Console.WriteLine("Hexadecimal: " + 0x72);

6.    Boolean Variable

bool isFemale = false;
Console.WriteLine(isFemale);

7.    Strings and Objects

string Hallo = "Hallo";
string World = "World";
object objSequence = Hallo + " " + World;
string strSequence = Convert.ToString(objSequence);
Console.WriteLine("{0}", strSequence);

8.    Quotes in Strings

string Quoting = "The \"use\" of quotations causes difficulties.";
Console.WriteLine(Quoting);
Quoting = "The use of quotations causes difficulties.";
Console.WriteLine(Quoting);

9.    Isosceles Triangle

//This program is changed a bit. It allows the user to choose the height of the triangle.
            //For output with exactly 9 symbols - as it is in the task, you can enter 4 for height.
            //The code is devided in three logical parts - first one prints the edge, the second one
            //shows the lines between the edge and the base and the last one displays the base of the triangle.
            try
            {
                Console.OutputEncoding = Encoding.UTF8; // This code allows correct output for symbols
                char symbol = '\x00A9';
                byte triangleHeight;
                //The following loop guarantees minimal height because it has to be at least 3
                do
                {
                    Console.Write("Enter height of the triangle: ");
                    triangleHeight = byte.Parse(Console.ReadLine());
                } while (triangleHeight <= 2);
 
                int numberSymbolsBase = triangleHeight; // This is the number of symbols for the base without spaces
 
                if (triangleHeight * 2 > Console.BufferWidth || triangleHeight > Console.BufferHeight)
                {
                    Console.SetBufferSize(2 * triangleHeight, triangleHeight + 5);
                    //This code sets the size of the buffer according to the dimensions of the triangle,
                    //but only if needed
                }
               
                // Edge of the triangle
                string spacesBeforeEdge = new string(' ', triangleHeight - 1);
                string edge = spacesBeforeEdge + symbol;
                Console.WriteLine(edge);
 
                // Lines Between the edge and the base of the triangle
                int spacesBetweenCount = 1; // This variable is used for the speces in the triangle
                int spacesBeforeCount = triangleHeight - 2; //Spaces before each line of symbols
                for (int i = 1; i <= triangleHeight - 2; i++)
                {
                    string spacesBefore = new string(' ', spacesBeforeCount);
                    spacesBeforeCount--;
                    string spacesBetween = new string(' ', spacesBetweenCount);
                    spacesBetweenCount = spacesBetweenCount + 2;
                    string currentLine = spacesBefore + symbol + spacesBetween + symbol;
                    Console.WriteLine(currentLine);
                }
 
                // Base of the triangle
                for (int i = 1; i <= numberSymbolsBase; i++)
                {
                    Console.Write(symbol + " ");
                }
                Console.WriteLine();
            }
            catch (FormatException)
            {
 
                Console.WriteLine("Wrong format for height."); ;
            }
            catch (OverflowException)
            {
                Console.WriteLine("You have entered too big or negative number for height.");
            }

10.    Exchange Variable Values

int a, b;
a = 5;
b = 10;
//принтираме първоначалните стойности
Console.WriteLine("a={0}, b={1}", a, b);
//започваме процедура по сменяне на стойностите
//1во ни трябва променлива "посредник" - "c"
int c;
//1во посредника "c", получава стойността на едната от променливите, в случая "а"
c = a;
//2ро възлагаме "а", със стойност "b"
a = b;
//3то възлагаме "b", със стойност "c"
b = c;
//ето, че постигнахме желаният резултат!
Console.WriteLine("a={0}, b={1}", a, b);

11.    Employee Data

//Име, Фамилия
string Fn, Ln;
//възраст
sbyte Age;
//пол
char Sex;
//Лично ID
long ID;
//ID в фирмата
int employeeID;

//Първи запис
Fn = "Dimitar";
Ln = "Bonev";
Age = 22;
Sex = 'm';
ID = 8736450923;
employeeID = 27564567;
Console.WriteLine("FirstName: " + Fn + "\nLastName: " + Ln + "\nAge: " + Age + "\nSex: " + Sex + "\nPersonal ID: " + ID + "\nEmployee ID: " + employeeID + "\n");

//2ри запис
Fn = "Ivan";
Ln = "Atanassov";
Age = 39;
Sex = 'm';
ID = 4537687943;
employeeID = 27561563;
Console.WriteLine("FirstName: " + Fn + "\nLastName: " + Ln + "\nAge: " + Age + "\nSex: " + Sex + "\nPersonal ID: " + ID + "\nEmployee ID: " + employeeID + "\n");

//3ти запис
Fn = "Stoil";
Ln = "Mostrov";
Age = 26;
Sex = 'm';
ID = 9463728175;
employeeID = 27565554;
Console.WriteLine("FirstName: " + Fn + "\nLastName: " + Ln + "\nAge: " + Age + "\nSex: " + Sex + "\nPersonal ID: " + ID + "\nEmployee ID: " + employeeID + "\n");

//4ти запис
Fn = "Vlado";
Ln = "Mihov";
Age = 23;
Sex = 'm';
ID = 5867043215;
employeeID = 27562654;
Console.WriteLine("FirstName: " + Fn + "\nLastName: " + Ln + "\nAge: " + Age + "\nSex: " + Sex + "\nPersonal ID: " + ID + "\nEmployee ID: " + employeeID + "\n");

12.    Bank Account Data

string fName, mName, lName, bName, IBAN;
decimal amount;
ulong creditCard, debitCard, masterCard;

fName="Ivan";
mName="Nikolov";
lName="Atanassov";
bName="Първа Инвестиционна Банка";
IBAN="BG20TTBB94003526341239";
amount = 243776.114M;
creditCard = 0220020043687900;
debitCard = 5467911156773546;
masterCard = 1627069517354657;

Console.WriteLine("First Name: " + fName + "\nMiddle Name: " + mName + "\nLast Name: " + lName + "\nBank Name: " + bName + "\nIBAN: " + IBAN + "\nBalance: " + amount + "\nCreditCard: " + creditCard + "\nDebitCard: " + debitCard + "\nMasterCard: " + masterCard + "\n");

13.    Null Values Arithmetic

int? nullInt=null;
double? nullDoub=null;
Console.WriteLine("Nullable Int: {0}, Nullable Double: {1}", nullInt, nullDoub);
nullInt = 123;
nullDoub = 12.667;
Console.WriteLine("Nullable Int(assigned val): {0}, Nullable Double(assigned val): {1}", nullInt, nullDoub);

14.    * Print the ASCII Table

for (int i = 0; i < 256; i++)
{
        Console.WriteLine(i + " --> \"" + (char)i + "\" in ASCII");
}
